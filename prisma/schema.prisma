// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_PRISMA_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_PRISMA_URL_NON_POOLING") // used for migrations
}

model AuthUser {
  id           String        @id @unique
  username     String        @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  Comment      Comment[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Comment {
  id        String   @id @unique @default(cuid())
  content   String
  user_id   String
  post_id   String
  timestamp DateTime  @default(now())
  auth_user AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("comment")
}
